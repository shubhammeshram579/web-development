<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Razorpay Payment</title>
</head>
<body>
    <h1>Make Payment</h1>

    <% if (cart && cart.products.length > 0) { %>
        <% let totalAmount = 0; %>
        <% let productDetails = cart.products.map(cartItem => ({ 
            productName: cartItem.productId.producttitle,
            quantity: cartItem.quantity,
            price: cartItem.productId.pPrice
        })); %>
        <% cart.products.forEach(cartItem => { %>
            <div>
                <div class="card1" style="display: flex; align-items: center; justify-content: start; gap: 10px;">
                    <img style="height: 50px; width: 50px; object-fit: cover;" src="<%= cartItem.productId.pImage %>" alt="Product Image">
                    <h1><%= cartItem.productId.producttitle %></h1>
                    <h1>Quantity: <%= cartItem.quantity %></h1>
                    <h1>Price: $<%= cartItem.productId.pPrice %></h1>
                </div>
            </div>
            <% totalAmount += cartItem.quantity * cartItem.productId.pPrice; %>
        <% }) %>

        <h3 id="amount2">Total Amount: $<%= totalAmount.toFixed(2) %></h3>

        <!-- Store product details in a hidden element for access by JavaScript -->
        <div id="productData" data-products='<%= JSON.stringify(productDetails) %>'></div>

    <% } else { %>
        <p>Your cart is empty.</p>
    <% } %>

    <!-- Payment Form -->
    <form id="paymentForm">
        <input type="hidden" id="amount" name="amount" value="<%= totalAmount * 100 %>"> <!-- Amount in paise -->

        <!-- User Details -->
        <div>
            <label for="username">Name:</label>
            <input type="text" id="username" name="username" value="<%= user.first_name %>" required>
            <input type="text" id="usernameLast" name="usernameLast" value="<%= user.last_name %>" required>
        </div>
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" value="<%= user.email %>" required>
        </div>
        <div>
            <label for="contact">Contact Number:</label>
            <input type="tel" id="contact" name="contact" value="<%= user.phone_number %>" required>
        </div>
        <div>
            <label for="address">Address:</label>
            <textarea id="address" name="address" required><%= user.address %></textarea>
        </div>

        <button type="submit">Pay with Razorpay</button>
    </form>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <!-- JavaScript for Handling Payment -->
    <script>
        document.getElementById('paymentForm').addEventListener('submit', async function (e) {
            e.preventDefault();  // Prevent form from submitting normally

            const amount = document.getElementById('amount').value;  // Get amount in paise
            const username = document.getElementById('username').value + " " + document.getElementById('usernameLast').value;
            const email = document.getElementById('email').value;
            const contact = document.getElementById('contact').value;
            const address = document.getElementById('address').value;

            // Retrieve the product details from the hidden div
            let productDetails = JSON.parse(document.getElementById('productData').getAttribute('data-products'));
            console.log(productDetails);  // Ensure product details are correct in the console

             // Format productDetails to a readable string for the invoice (e.g., product names and quantities)
            let productDetailsString = productDetails.map(item => {
                return `Product: ${item.productName}, Quantity: ${item.quantity}, Price: ${item.price}`;
            }).join(', ');

            // console.log(productDetailsString);  // Check the formatted product details

            // Create order on the server with product details
            const response = await fetch('/create/order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    amount,
                    username,
                    email,
                    contact,
                    address,
                    productDetails  // Send product details to server
                })
            });

            const order = await response.json();

            // Configure Razorpay options
            const options = {
                "key": "<%= key %>",  // Your Razorpay key_id
                "amount": order.amount,  // Amount in paise
                "currency": "INR",
                "name": username,  // User's name
                "description": "Test Transaction",
                "order_id": order.id,  // Order ID created on server
                "handler": async function (response) {
                    const verificationResponse = await fetch('/verify', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(response)
                    });

                    const result = await verificationResponse.json();
                    if (result.status === 'success') {
                        alert('Payment Successful!');
                    } else {
                        alert('Payment Failed!');
                    }
                },
                "prefill": {
                    "name": username,
                    "email": email,
                    "contact": contact
                },
                "notes": {
                    "address": address,
                    "products": productDetailsString  // Store product details in notes
                },
                "method": {
                    "upi": true,
                    "card": true,
                    "netbanking": true
                }
            };

            const razorpay = new Razorpay(options);
            razorpay.open();
        });
    </script>
   
</body>
</html>
